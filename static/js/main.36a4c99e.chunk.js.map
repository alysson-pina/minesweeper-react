{"version":3,"sources":["utils/position.js","utils/useBoardCategory.js","utils/mediaQueries.js","constants/board.js","utils/initBoard.js","components/game/styles.js","components/game/useBombCount.js","components/game/useWidth.js","utils/sizes.js","components/game/Game.jsx","utils/getPublicUrl.js","components/field/styles.js","components/field/Field.jsx","components/face/styles.js","components/face/Face.jsx","components/instructions/styles.js","components/instructions/Instructions.jsx","utils/mouseEvents.js","components/board/Board.jsx","components/board/styles.js","components/board/useBoardPixelWidth.js","utils/fieldDetection.js","assets/logo.svg","styles.js","App.jsx","reportWebVitals.js","index.js"],"names":["get2DIndexFrom1D","pos","width","i","Math","floor","j","get1DIndexFrom2D","column","row","Number","parseInt","useBoardCategory","isLargeScreen","useMediaQuery","isSmallScreen","HEIGHT","initStructure","bombCount","structure","Array","from","length","_","value","count","random","updateNeighbours","index1D","nOfBombs","rows","columns","x","y","Head","styled","div","useBombCount","useWidth","Game","initialBombCount","useState","attempts","setAttempts","setBombCount","bombsFlaggedCorrect","setBombsFlaggedCorrect","won","setWon","lost","setLost","mouseDown","onMouseDown","setStructure","restartGame","useCallback","useEffect","handleFaceClick","onMouseUp","Board","updateBombCount","flagged","isCorrectFlag","increment","prependWithPublicUrl","url","process","Cell","props","mistakeWasHere","CLASSES","Object","freeze","B","MB","F","U","Field","React","forwardRef","ref","hasMine","revealNeighborhood","clicked","setClicked","isFlagged","setFlagged","content","setContent","tabIndex","onClick","e","preventDefault","target","focus","onContextMenu","newValue","className","Wrapper","startPosition","Face","HtmlTooltip","Tooltip","Instructions","title","Fragment","Typography","color","variant","Divider","Button","createRightClickEventForElement","element","MouseEvent","bubbles","cancelable","view","window","button","buttons","clientX","getBoundingClientRect","clientY","NAVIGATION_KEYS","fieldsRef","useRef","computeBoardPixelWidth","useBoardPixelWidth","candidateFieldPos","current","setImmediate","click","onKeyDown","detectFieldPosition","position","fieldRef","code","event","dispatchEvent","indexOf","currentPosition","keyCode","newPosition","numberOfElements","handleArrowKeyNavigation","map","el","rowI","columnJ","classList","forEach","matched","match","rowIZeroBased","columnJZeroBased","AppMain","main","AppTitleStyle","h1","AppHeader","AppSection","section","Logo","img","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36a4c99e.chunk.js","sourcesContent":["export const get2DIndexFrom1D = (pos, width) => ({\n  i: Math.floor(pos / width),\n  j: pos % width\n})\n\nexport const get1DIndexFrom2D = (column, row, width) => (\n  Number.parseInt(column) + Number.parseInt(row) * width\n)\n","import { useSmallScreen, useLargeScreen } from './mediaQueries'\n\nconst useBoardCategory = () => {\n  const isLargeScreen = useLargeScreen()\n  const isSmallScreen = useSmallScreen()\n\n  return isLargeScreen ? 'LARGE' : isSmallScreen ? 'SMALL' : 'MEDIUM'\n}\n\nexport default useBoardCategory\n","import useMediaQuery from '@material-ui/core/useMediaQuery'\n\nexport const useLargeScreen = () => useMediaQuery('(min-width:980px)')\nexport const useSmallScreen = () => useMediaQuery('(max-width:596px)')\n","export const HEIGHT = 16\n","import { HEIGHT } from '../constants/board'\nimport { get1DIndexFrom2D, get2DIndexFrom1D } from './position'\n\nexport const initStructure = (width, bombCount) => {\n  const structure = Array.from(\n    { length: HEIGHT * width }, (_, i) => ({\n      i: Math.floor(i / width),\n      j: i % width,\n      value: ''\n    })\n  )\n\n  let pos\n  let count = 0\n\n  while (count < bombCount) {\n    pos = Math.floor((Math.random() * HEIGHT * width))\n\n    if (structure[pos].value !== 'B') {\n      structure[pos].value = 'B'\n      updateNeighbours(structure, pos, width)\n      count += 1\n    }\n  }\n\n  return structure\n}\n\nconst updateNeighbours = (structure, pos, width) => {\n  const { i, j } = get2DIndexFrom1D(pos, width)\n  const rows = [i - 1, i, i + 1]\n  const columns = [j - 1, j, j + 1]\n\n  let index1D, nOfBombs\n\n  for (const x in rows) {\n    for (const y in columns) {\n      if (\n        (rows[x] < 0 || columns[y] < 0) ||\n        (columns[y] >= width || rows[x] >= HEIGHT)\n      ) {\n        continue\n      }\n\n      index1D = get1DIndexFrom2D(columns[y], rows[x], width)\n      if (structure[index1D] && structure[index1D]?.value !== 'B') {\n        nOfBombs = structure[index1D].value\n        structure[index1D].value = nOfBombs ? nOfBombs + 1 : 1\n      }\n    }\n  }\n}\n","import styled from 'styled-components'\n\nexport const Head = styled.div`\n  margin: 20px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 600;\n`\n","import useBoardCategory from '../../utils/useBoardCategory'\n\nconst useBombCount = () => {\n  const boardCategory = useBoardCategory()\n\n  switch(boardCategory) {\n    case 'SMALL': \n      return 36\n    case 'MEDIUM':\n      return 52\n    default:\n      return 99\n  }\n}\n\nexport default useBombCount\n","import { SMALL, MEDIUM, LARGE } from '../../utils/sizes'\nimport useBoardCategory from '../../utils/useBoardCategory'\n\nconst useWidth = () => {\n  const boardCategory = useBoardCategory()\n\n  switch(boardCategory) {\n    case 'SMALL': \n      return SMALL\n    case 'MEDIUM':\n      return MEDIUM\n    default:\n      return LARGE\n  }\n}\n\nexport default useWidth\n","export const SMALL = 11\nexport const MEDIUM = 16\nexport const LARGE = 30 \n","import React, { useCallback, useEffect, useState } from 'react'\n\nimport { Board, Face } from '..'\nimport { initStructure } from '../../utils/initBoard'\n\nimport { Head } from './styles'\nimport useBombCount from './useBombCount'\nimport useWidth from './useWidth'\n\nconst Game = () => {\n  const initialBombCount = useBombCount()\n  const width = useWidth()\n  const [attempts, setAttempts] = useState(1)\n  const [bombCount, setBombCount] = useState(initialBombCount)\n  const [bombsFlaggedCorrect, setBombsFlaggedCorrect] = useState(initialBombCount)\n  const [won, setWon] = useState(false)\n  const [lost, setLost] = useState(false)\n  const [mouseDown, onMouseDown] = useState(false)\n  const [structure, setStructure] = useState(initStructure(width, initialBombCount))\n\n  const restartGame = useCallback(() => {\n    setBombCount(initialBombCount)\n    setBombsFlaggedCorrect(initialBombCount)\n    setLost(false)\n    setWon(false)\n  }, [setBombCount, setLost, setWon, initialBombCount])\n\n  useEffect(() => {\n    setStructure(initStructure(width, initialBombCount))\n    restartGame()\n  }, [initialBombCount, restartGame, width])\n\n  const updateBombCount = (flagged, isCorrectFlag) => {\n    const increment = flagged ? -1 : 1\n\n    setBombCount(bombCount + increment)\n\n    if(isCorrectFlag) {\n      setBombsFlaggedCorrect(bombsFlaggedCorrect + increment)\n\n      if((bombsFlaggedCorrect + increment === 0) && (bombCount + increment === 0)) {\n        // here means: no bombs are left, and all flagged fields are indeed bombs \n        setWon(true)\n      }\n    }\n  }\n\n  const handleFaceClick = () => {\n    setAttempts(() => attempts + 1)\n    setStructure(initStructure(width, initialBombCount))\n    restartGame()\n  }\n\n  return (\n    <div>\n      <Head>\n        <div>Bombs left: {bombCount}</div>\n        <Face won={won} lost={lost} mouseDown={mouseDown} restartGame={handleFaceClick} />\n        <div>{lost ? 'You lost!' : won? 'You won!' : `Attempt #${attempts}`}</div>\n      </Head>\n      <div\n        onMouseDown={() => onMouseDown(true)}\n        onMouseUp={() => onMouseDown(false)}\n      >\n        <Board\n          bombCount={bombCount}\n          updateBombCount={updateBombCount}\n          won={won}\n          lost={lost}\n          setLost={setLost}\n          structure={structure}\n          width={width}\n          restartGame={handleFaceClick}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Game\n","const prependWithPublicUrl = (url) => process.env.PUBLIC_URL ? `${process.env.PUBLIC_URL}/${url}` : url\n\nexport default prependWithPublicUrl\n","import styled from 'styled-components'\nimport prependWithPublicUrl from '../../utils/getPublicUrl'\n\nexport const Cell = styled.div`\n  flex: 1 1 32px;\n  width: 32px;\n  height: 32px;\n  background-image: url(${prependWithPublicUrl('sprite200.gif')});\n  background-position: 0 -78px;\n\n  &.unclicked {\n    background-position: 0 -78px;\n  }\n\n  &.bomb {\n    background-position: ${props => props.mistakeWasHere ? '-64px -78px' : '-128px -78px;'}\n  }\n\n  &.mistakenBomb {\n    background-position: -96px -78px;\n  }\n  \n  &.zero {\n    background-position: 0 -46px;\n  }\n\n  &.flag {\n    background-position: -32px -78px;\n  }\n\n  &.one {\n    background-position: -32px -46px;\n  }\n\n  &.two {\n    background-position: -64px -46px;\n  }\n\n  &.three {\n    background-position: -96px -46px;\n  }\n\n  &.four {\n    background-position: -128px -46px;\n  }\n\n  &.five {\n    background-position: -160px -46px;\n  }\n\n  &.six {\n    background-position: -192px -46px;\n  }\n\n  &.seven {\n    background-position: -224px -46px;\n  }\n\n  &.eigth {\n    background-position: -256px -46px;\n  }\n`\n","\nimport React, { useEffect, useState } from 'react'\nimport { Cell } from './styles'\n\nconst CLASSES = Object.freeze({\n  0: 'zero',\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eigth',\n  B: 'bomb',\n  MB: 'mistakenBomb',\n  F: 'flag',\n  U: 'unclicked'\n})\n\nconst Field = React.forwardRef(({ \n    hasMine, value, won, lost, setLost, updateBombCount, row, column, revealNeighborhood \n  }, ref) => {\n  const [clicked, setClicked] = useState(false)\n  const [isFlagged, setFlagged] = useState(false)\n  const [content, setContent] = useState('U')\n\n  useEffect(() => {\n    if(lost) {\n      if(content === 'F') {\n        if(!hasMine) {\n          setContent('MB')\n        }\n      } else {\n        setContent(value || 0)\n      }\n    } else {\n      setContent('U')\n      setClicked(false)\n      setFlagged(false)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lost, hasMine, setContent, value])\n\n  const handleRightClick = (e) => {\n    e.preventDefault()\n\n    if(clicked || lost || won) {\n      return\n    }\n\n    const newValue = !isFlagged\n\n    e.target.focus()\n    updateBombCount(newValue, hasMine)\n    setFlagged(newValue)\n\n    if(newValue) {\n      setContent('F')\n    } else {\n      setContent('U')\n    }\n  }\n\n  const handleLeftClick = (e) => {\n    e.preventDefault()\n  \n    if(clicked || lost || won || content === 'F') {\n      return\n    }\n\n    e.target.focus()\n    setClicked(true)\n\n    if (hasMine) { // user clicked on a bomb\n      setContent('B')\n      setLost(true)\n    } else {\n      setContent(value || 0)\n    }\n\n    if(value === \"\") { // empty-cell, traverse the DOM\n      revealNeighborhood(row, column)\n    }\n  }\n\n  return (\n    <Cell\n      tabIndex={0}\n      ref={ref}\n      onClick={handleLeftClick}\n      onContextMenu={handleRightClick} // to handle right click\n      mistakeWasHere={hasMine && clicked}\n      className={`row${row+1}_column${column+1} ${CLASSES[content]}`}\n      data-testid='minefield'\n    />\n  )\n})\n\nexport default Field\n","\nimport styled from 'styled-components'\nimport prependWithPublicUrl from '../../utils/getPublicUrl'\n\nexport const Wrapper = styled.div`\n  background-image: url(${prependWithPublicUrl('sprite200.gif')});\n  background-position: ${props => props.startPosition} -110px;\n  width: 52px;\n  height: 52px;\n`\n","import React from 'react'\nimport { Wrapper } from './styles'\n\nconst Face = ({ won, lost, mouseDown, restartGame }) => {\n  const startPosition = won ? '-208px' : lost ? '-156px' : mouseDown ? '-104px' : '0'\n\n  return <Wrapper startPosition={startPosition} onClick={() => restartGame()} />\n}\n\nexport default Face\n","import { Tooltip } from '@material-ui/core'\nimport styled from 'styled-components'\n\nexport const HtmlTooltip = styled(Tooltip)`\n  backgroundColor: '#f5f5f9';\n  color: 'rgba(0, 0, 0, 0.87)';\n  fontSize: 12rem;\n  border: '1px solid #dadde9';\n`\n","import React from 'react'\nimport { Button, Typography, Divider } from '@material-ui/core'\nimport { HtmlTooltip } from './styles'\n\nconst Instructions = () => {\n  return (\n    <div>\n      <HtmlTooltip\n        title={\n          <React.Fragment>\n            <Typography color=\"inherit\" variant='h6'>How To Play</Typography>\n              <Typography color=\"inherit\" variant='overline'><b><u>Desktop</u></b></Typography>\n              <Typography color=\"inherit\" variant='subtitle2'>Mouse</Typography>\n              <ul>\n                <li><b>Left click</b> to reveal an empty square</li>\n                <li><b>Righ click</b> to mark/unmark a flag on a square</li>\n                <li><b>Click</b> on the smiley face to reset the game</li>\n              </ul>\n\n              <Typography color=\"inherit\" variant='subtitle2'>Keyboard</Typography>\n\n              <ul>\n                <li><b>Use the arrow keys</b> to go up, down, left or right from the current square</li>\n                <li><b>Press space</b> on the selected square to mark/unmark a flag on it</li>\n                <li><b>Press C or Enter</b> on the selected square to reveal it</li>\n                <li><b>Press R</b> to reset the game</li>\n              </ul>\n\n              <Divider />\n              <Typography color=\"inherit\" variant='overline'><b><u>Mobile</u></b></Typography>\n\n              <ul>\n                <li><b>Single Tap</b> to reveal an empty square</li>\n                <li><b>Long Tap</b> to mark/unmark a flag on a square</li>\n                <li><b>Tap</b> on the smiley face to reset the game</li>\n              </ul>\n          </React.Fragment>\n        }\n      >\n        <Button>How To Play</Button>\n      </HtmlTooltip>\n    </div>\n  );\n}\n\nexport default Instructions\n","export const createRightClickEventForElement = (element) => {\n  return new MouseEvent('contextmenu', {\n    bubbles: true,\n    cancelable: false,\n    view: window,\n    button: 2,\n    buttons: 0,\n    clientX: element?.getBoundingClientRect().x,\n    clientY: element?.getBoundingClientRect().y\n  })\n}\n\nexport const NAVIGATION_KEYS = Object.freeze(['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'])\n","\nimport React, { useEffect, useRef } from 'react'\n\n\nimport { Wrapper } from './styles'\nimport { Field } from '..'\nimport { get1DIndexFrom2D } from '../../utils/position'\nimport useBoardPixelWidth from './useBoardPixelWidth'\nimport { HEIGHT } from '../../constants/board'\nimport { NAVIGATION_KEYS, createRightClickEventForElement } from '../../utils/mouseEvents'\nimport { detectFieldPosition } from '../../utils/fieldDetection'\n\nconst Board = ({ updateBombCount, won, lost, setLost, structure, width, restartGame }) => {\n  const fieldsRef = useRef([])\n  const computeBoardPixelWidth = useBoardPixelWidth()\n\n  const revealNeighborhood = (row, column) => {\n    const pos = get1DIndexFrom2D(column, row, width)\n    const columns = [column - 1, column, column + 1]\n    const rows = [row - 1, row, row + 1]\n\n    for(let x in columns) {\n      for (let y in rows ) {\n        const candidateFieldPos = get1DIndexFrom2D(columns[x], rows[y], width)\n        if(\n          (candidateFieldPos === pos) || // avoid same field again\n          (columns[x] < 0 || rows[y] < 0) || // avoid inexistant left or top edges\n          ( rows[y] >= HEIGHT || columns[x] >= width ) // avoid inexistant right or bottom edges\n          ) {\n            continue\n          }\n\n          const ref = fieldsRef.current[candidateFieldPos]\n\n          setImmediate(\n            () => ref?.click() // async click to avoid infinite loop\n          )\n      }\n    }\n  }\n\n  const handleArrowKeyNavigation = (currentPosition, keyCode) => {\n    let increment = 0\n\n    switch(keyCode) {\n      case 'ArrowLeft':\n        increment = -1\n        break\n      case 'ArrowRight':\n        increment = 1\n        break\n      case 'ArrowUp':\n        increment = -width\n        break\n      case 'ArrowDown':\n        increment = width\n        break\n      default:\n    }\n\n    let newPosition = currentPosition + increment\n    const numberOfElements = fieldsRef?.current.length\n\n    // check boundaries\n    if(newPosition < 0) {\n      newPosition += numberOfElements - 1\n    }\n\n    if(newPosition >= numberOfElements) {\n      newPosition -= numberOfElements - 1\n    }\n\n    // focus field at new calculated position\n    fieldsRef?.current[newPosition]?.focus()\n  }\n\n  const handleKeyDown = (e) => {\n    const [position] = detectFieldPosition(e, width)\n    const fieldRef = fieldsRef.current[position] // detect which field is the target\n\n    if(e.code === 'Space') {\n      const event = createRightClickEventForElement(fieldRef)\n      fieldRef?.dispatchEvent(event)\n    } else if(e.code === 'KeyC' || e.code === 'Enter') {\n      fieldRef?.click()\n    } else if(NAVIGATION_KEYS.indexOf(e.code) >= 0) {\n      handleArrowKeyNavigation(position, e.code)\n    } else if(e.code === 'KeyR') {\n      restartGame()\n    }\n  }\n\n  useEffect(() => {\n    fieldsRef?.current[0]?.focus()\n  }, [])\n\n  return (\n    <Wrapper width={computeBoardPixelWidth} onKeyDown={handleKeyDown}>\n      {\n        structure?.map(({ i, j, value }) => {\n          const pos = get1DIndexFrom2D(j, i, width)\n\n          return (\n            <Field\n              ref={el => {\n                fieldsRef.current[pos] = el\n              } }\n              key={`${i}_${j}`} \n              row={i}\n              column={j}\n              hasMine={value === 'B'}\n              value={value}\n              won={won}\n              lost={lost}\n              setLost={setLost}\n              updateBombCount={updateBombCount}\n              revealNeighborhood={revealNeighborhood}\n            />\n          )\n        })\n      }\n    </Wrapper>\n  )\n}\n\nexport default Board\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: ${props => props.width};\n`\n\n","import useBoardCategory from '../../utils/useBoardCategory'\n\nconst useBoardPixelWidth = () => {\n  const boardCategory = useBoardCategory()\n\n  switch(boardCategory) {\n    case 'SMALL': \n      return '352px'\n    case 'MEDIUM':\n      return '516px'\n    default:\n      return '970px'\n  }\n}\n\nexport default useBoardPixelWidth\n","import { get1DIndexFrom2D } from \"./position\"\n\n// detects which field was targeted by event e\nexport const detectFieldPosition = (e, width) => {\n  if(!e || !e.target) {\n    return\n  }\n\n  const el = e.target\n  let rowI, columnJ\n\n  el.classList.forEach((className) => {\n    const matched = className.match(/row(\\d{1,2})_column(\\d{1,2})/)\n    if(matched) {\n      [, rowI, columnJ] = matched\n    }\n  })\n\n  if(!rowI || !columnJ) { // couldn't detect which field is it\n    return\n  }\n\n  const rowIZeroBased = rowI - 1\n  const columnJZeroBased = columnJ - 1\n\n  return [get1DIndexFrom2D(columnJZeroBased, rowIZeroBased, width), rowI, columnJZeroBased]\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styled from 'styled-components'\n\nexport const AppMain = styled.main`\n  width: 100%;\n  text-align: center;\n`\n\nexport const AppTitleStyle = styled.h1`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  margin: 0;\n  padding: 16px 0;\n  width: 100%;\n`\n\nexport const AppHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  margin: 0;\n  padding: 16px 0;\n  width: 100%;\n`\n\nexport const AppTitle = styled.h1`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  margin: 0;\n  padding: 16px 0;\n  width: 100%;\n`\n\nexport const AppSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  color: white;\n`\n\nexport const Logo = styled.img`\n  pointer-events: none;\n\n  @media (prefers-reduced-motion: no-preference) {\n      animation: App-logo-spin infinite 20s linear;\n  }\n\n  @keyframes App-logo-spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`\n","import React from 'react'\nimport logo from './assets/logo.svg'\nimport { AppHeader, AppMain, AppSection, Logo, AppTitleStyle } from './styles'\n\n\nimport { Game, Instructions } from './components'\n\nconst App = () => {\n  return (\n    <AppMain>\n      <AppHeader>\n        <AppTitleStyle>\n          Modern React Minesweeper <Logo width='64' src={logo} alt='react logo'/>\n        </AppTitleStyle>\n        <Instructions />\n      </AppHeader>\n      <AppSection>\n        <Game />\n      </AppSection>\n    </AppMain>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}